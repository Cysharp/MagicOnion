name: Build Debug

on:
  push:
    branches:
      - main
      - release/**
    tags:
      - "!*" # not a tag push
    paths-ignore:
      - '**.md'
      - .github/**
      - docs/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - .github/**
      - docs/**

env:
  BUILD_CONFIG: Debug

jobs:
  build-dotnet:
    name: "Build .NET projects"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      - run: dotnet build -c ${{ env.BUILD_CONFIG }} ./MagicOnion.sln

  run-tests:
    name: "Run tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      - run: dotnet test -c Debug MagicOnion.sln
      - run: dotnet test -c Release MagicOnion.sln

  build-unity:
    name: "Build Unity package"
    if: ${{ (github.event_name == 'push' && github.repository_owner == 'Cysharp') || startsWith(github.event.pull_request.head.label, 'Cysharp:') }}
    strategy:
      matrix:
        unity: ["2021.3.0f1"]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Load secrets
        id: op-load-secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PUBLIC }}
          UNITY_EMAIL: "op://GitHubActionsPublic/UNITY_LICENSE/username"
          UNITY_PASSWORD: "op://GitHubActionsPublic/UNITY_LICENSE/credential"
          UNITY_SERIAL: "op://GitHubActionsPublic/UNITY_LICENSE/serial"

      - uses: actions/checkout@v4

      # todo: prepare runtime unit test
      # Execute scripts: RuntimeUnitTestToolkit
      # - name: Build UnitTest(Linux64, mono)
      #   run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend mono /BuildTarget StandaloneLinux64
      #   working-directory: src/ZLogger.Unity
      # - name: Execute UnitTest
      #   run: ./src/ZLogger.Unity/bin/UnitTest/StandaloneLinux64_Mono2x/test

      # execute scripts/Export Package
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      - name: Build Unity (.unitypacakge)
        uses: Cysharp/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ steps.op-load-secret.outputs.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ steps.op-load-secret.outputs.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ steps.op-load-secret.outputs.UNITY_SERIAL }}
        with:
          projectPath: src/MagicOnion.Client.Unity
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: PackageExporter.Export

      - uses: ./.github/actions/check-metas
        with:
          directory: src/MagicOnion.Client.Unity

      # Store artifacts.
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: MagicOnion.Client.Unity.${{ matrix.unity }}.unitypackage
          path: ./src/MagicOnion.Client.Unity/MagicOnion.Client.Unity.unitypackage
          retention-days: 1
