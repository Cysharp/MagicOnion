name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: git tag you want create. (sample 1.0.0)"
        required: true
      dry-run:
        description: "dry-run: true will never create relase/nuget."
        required: true
        default: false
        type: boolean

jobs:
  update-packagejson:
    permissions:
      actions: read
      contents: write
    uses: Cysharp/Actions/.github/workflows/update-packagejson.yaml@main
    with:
      file-path: |
        ./src/MagicOnion.Client.Unity/Assets/Scripts/MagicOnion.Client.Unity/package.json
        ./Directory.Build.props
      tag: ${{ inputs.tag }}
      dry-run: ${{ inputs.dry-run }}
      push-tag: false
      ref: ${{ github.ref }}

  build-dotnet:
    needs: [update-packagejson]
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - run: echo ${{ needs.update-packagejson.outputs.sha }}
      - uses: Cysharp/Actions/.github/actions/checkout@main
        with:
          ref: ${{ needs.update-packagejson.outputs.sha }}
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      - run: dotnet build -c Release ./MagicOnion.sln
      # pack nuget
      - run: dotnet pack -c Release ./MagicOnion.Packaging.slnf --no-build -o ./publish
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: nuget
          path: ./publish/
          retention-days: 1

  #build-unity:
  #  needs: [update-packagejson]
  #  strategy:
  #    matrix:
  #      unity: ["2022.3.0f1"]
  #  runs-on: ubuntu-24.04
  #  timeout-minutes: 15
  #  steps:
  #    - name: Load secrets
  #      id: op-load-secret
  #      uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0 # v2.0.0
  #      with:
  #        export-env: false
  #      env:
  #        OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PUBLIC }}
  #        UNITY_EMAIL: "op://${{ vars.OP_VAULT_ACTIONS_INTERNAL }}/UNITY_LICENSE/username"
  #        UNITY_PASSWORD: "op://${{ vars.OP_VAULT_ACTIONS_INTERNAL }}/UNITY_LICENSE/credential"
  #        UNITY_SERIAL: "op://${{ vars.OP_VAULT_ACTIONS_INTERNAL }}/UNITY_LICENSE/serial"
  #
  #    - uses: Cysharp/Actions/.github/actions/checkout@main
  #      with:
  #        ref: ${{ needs.update-packagejson.outputs.sha }}
  #    # execute scripts/Export Package
  #    # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
  #    - name: Build Unity (.unitypacakge)
  #      uses: Cysharp/Actions/.github/actions/unity-builder@main
  #      env:
  #        UNITY_EMAIL: ${{ steps.op-load-secret.outputs.UNITY_EMAIL }}
  #        UNITY_PASSWORD: ${{ steps.op-load-secret.outputs.UNITY_PASSWORD }}
  #        UNITY_SERIAL: ${{ steps.op-load-secret.outputs.UNITY_SERIAL }}
  #        UNITY_PACKAGE_VERSION: ${{ inputs.tag }}
  #      with:
  #        projectPath: src/MagicOnion.Client.Unity
  #        unityVersion: ${{ matrix.unity }}
  #        targetPlatform: StandaloneLinux64
  #        buildMethod: PackageExporter.Export
  #
  #    - uses: Cysharp/Actions/.github/actions/check-metas@main # check meta files
  #      with:
  #        directory: src/MagicOnion.Client.Unity
  #
  #    # Store artifacts.
  #    - uses: Cysharp/Actions/.github/actions/upload-artifact@main
  #      with:
  #        name: MagicOnion.Client.Unity.unitypackage
  #        path: ./src/MagicOnion.Client.Unity/MagicOnion.Client.Unity.unitypackage
  #        retention-days: 1

  # release
  create-release:
    needs: [update-packagejson, build-dotnet]
    permissions:
      contents: write
      id-token: write # required for NuGet Trusted Publish
    uses: Cysharp/Actions/.github/workflows/create-release.yaml@main
    with:
      commit-id: ${{ needs.update-packagejson.outputs.sha }}
      dry-run: ${{ inputs.dry-run }}
      tag: ${{ inputs.tag }}
      nuget-push: true
      release-format: "{0}"
    secrets: inherit

  cleanup:
    if: ${{ needs.update-packagejson.outputs.is-branch-created == 'true' }}
    needs: [build-dotnet, update-packagejson]
    permissions:
      contents: write
    uses: Cysharp/Actions/.github/workflows/clean-packagejson-branch.yaml@main
    with:
      branch: ${{ needs.update-packagejson.outputs.branch-name }}
